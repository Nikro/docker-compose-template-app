name: Deploy the App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: app-dev
      cancel-in-progress: true
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Log-in to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Force to update docker-compose image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          port: ${{ secrets.PORT_DEV }}
          username: ${{ secrets.USERNAME_DEV }}
          key: ${{ secrets.PKEY_DEV }}
          script: bash ~/app-deployment/host/scripts/update-code.sh

      - name: Clean-up images - leave only latest 5
        uses: actions/delete-package-versions@v2
        with:
          package-name: 'docker-compose-template-app'
          min-versions-to-keep: 5
          ignore-versions: '^(0|[1-9]\\d*)\\.0\\.0$'